{
  "paragraphs": [
    {
      "title": "Create posts table",
      "text": "%spark\nimport java.util.Properties;\nimport org.infinispan.spark.rdd.InfinispanRDD;\nimport org.infinispan.spark._;\nimport org.jboss.datagrid.demo.stackexchange.model.Post;\n\nval properties \u003d new Properties;\nproperties.put(\"infinispan.client.hotrod.server_list\", \"localhost:11222;localhost:11322\");\nproperties.put(\"infinispan.rdd.cacheName\", \"PostStore\");\n// Create an RDD from the DataGrid cache\nval mapRDD \u003d new InfinispanRDD[Integer, Post](sc, properties);\nval valuesRDD \u003d mapRDD.values;\n\nval dataFrame \u003d sqlContext.createDataFrame(valuesRDD, classOf[Post]);\ndataFrame.registerTempTable(\"posts\");",
      "dateUpdated": "Aug 23, 2016 9:19:50 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "tableHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1471929623013_724683745",
      "id": "20160823-072023_1086100897",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import java.util.Properties\nimport org.infinispan.spark.rdd.InfinispanRDD\nimport org.infinispan.spark._\nimport org.jboss.datagrid.demo.stackexchange.model.User\nproperties: java.util.Properties \u003d {}\nres16: Object \u003d null\nres17: Object \u003d null\nmapRDD: org.infinispan.spark.rdd.InfinispanRDD[Integer,org.jboss.datagrid.demo.stackexchange.model.Post] \u003d InfinispanRDD[752] at RDD at InfinispanRDD.scala:21\nvaluesRDD: org.apache.spark.rdd.RDD[org.jboss.datagrid.demo.stackexchange.model.Post] \u003d MapPartitionsRDD[753] at values at \u003cconsole\u003e:66\ndataFrame: org.apache.spark.sql.DataFrame \u003d [body: string, commentCount: int, creationDate: string, id: int, ownerUserId: int, postTypeId: int, score: int, tags: string, title: string]\n"
      },
      "dateCreated": "Aug 23, 2016 7:20:23 AM",
      "dateStarted": "Aug 23, 2016 9:19:50 AM",
      "dateFinished": "Aug 23, 2016 9:19:52 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create users table",
      "text": "%spark\nimport java.util.Properties;\nimport org.infinispan.spark.rdd.InfinispanRDD;\nimport org.infinispan.spark._;\nimport org.jboss.datagrid.demo.stackexchange.model.User;\n\nval properties \u003d new Properties;\nproperties.put(\"infinispan.client.hotrod.server_list\", \"localhost:11222;localhost:11322\");\nproperties.put(\"infinispan.rdd.cacheName\", \"UserStore\");\n// Create an RDD from the DataGrid cache\nval mapRDD \u003d new InfinispanRDD[Integer, User](sc, properties);\nval valuesRDD \u003d mapRDD.values;\n\nval dataFrame \u003d sqlContext.createDataFrame(valuesRDD, classOf[User]);\ndataFrame.registerTempTable(\"users\");",
      "dateUpdated": "Aug 23, 2016 9:19:50 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": true,
        "editorHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1471929858454_780009321",
      "id": "20160823-072418_1589574730",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import java.util.Properties\nimport org.infinispan.spark.rdd.InfinispanRDD\nimport org.infinispan.spark._\nimport org.jboss.datagrid.demo.stackexchange.model.User\nproperties: java.util.Properties \u003d {}\nres20: Object \u003d null\nres21: Object \u003d null\nmapRDD: org.infinispan.spark.rdd.InfinispanRDD[Integer,org.jboss.datagrid.demo.stackexchange.model.User] \u003d InfinispanRDD[755] at RDD at InfinispanRDD.scala:21\nvaluesRDD: org.apache.spark.rdd.RDD[org.jboss.datagrid.demo.stackexchange.model.User] \u003d MapPartitionsRDD[756] at values at \u003cconsole\u003e:72\ndataFrame: org.apache.spark.sql.DataFrame \u003d [aboutMe: string, accountId: string, age: int, creationDate: string, displayName: string, downVotes: string, id: int, lastAccessDate: string, location: string, reputation: int, upVotes: string, views: int, websiteUrl: string]\n"
      },
      "dateCreated": "Aug 23, 2016 7:24:18 AM",
      "dateStarted": "Aug 23, 2016 9:19:50 AM",
      "dateFinished": "Aug 23, 2016 9:19:54 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Top 10 Posts with highest score",
      "text": "%sql\nSELECT score as `Score`,u.displayName as `User`,title as `Post title`\nFROM posts p \nINNER JOIN users u \nON u.id\u003dp.ownerUserId\nWHERE p.postTypeId\u003d1\nORDER BY p.score DESC\nLIMIT 10\n",
      "dateUpdated": "Aug 23, 2016 9:19:50 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 282.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Score",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "User",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "yAxis": {
              "name": "User",
              "index": 1.0,
              "aggr": "sum"
            },
            "xAxis": {
              "name": "Score",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "title": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1471929649339_-387058331",
      "id": "20160823-072049_1954765233",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Score\tUser\tPost title\n50\tSavage Henry\tDo different beer glass shapes really make a difference in taste?\n36\tPops\tHow can I tell whether a beer will improve with age?\n35\tcrownjewel82\tDo cans change the taste of beer?\n31\tcrownjewel82\tWhat\u0027s the difference between a porter and a stout?\n30\tLucas Kauffman\tDoes beer really go bad after the \u0027best before\u0027-date?\n29\tTom Medley\tWhat is the difference between an ale and a lager?\n27\tDecency\tDoes beer suffer from being warmed and then rechilled?\n27\tTanner Faulkner\tWhere can I find open APIs about beer?\n24\tJutschge\tWhat is the strongest beer?\n23\tHugo Dozois\tWhat are the difference between a dubbel and a tripel?\n"
      },
      "dateCreated": "Aug 23, 2016 7:20:49 AM",
      "dateStarted": "Aug 23, 2016 9:19:53 AM",
      "dateFinished": "Aug 23, 2016 9:19:56 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Top 10 Commented Posts",
      "text": "%sql\nSELECT commentCount as `Comments`,u.displayName as `User`,title as `Post title`\nFROM posts p\nINNER JOIN users u \nON u.id\u003dp.ownerUserId\nWHERE p.postTypeId\u003d1\nORDER BY p.commentCount DESC\nLIMIT 10",
      "dateUpdated": "Aug 23, 2016 9:19:50 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 287.0,
          "optionOpen": true,
          "keys": [
            {
              "name": "#Comments",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "User",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "#Comments",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "User",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1471930058164_1926651344",
      "id": "20160823-072738_474696442",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Comments\tUser\tPost title\n9\tJLott\tUnited States Beer Shipping Laws\n8\tLucas Kauffman\tDoes beer really go bad after the \u0027best before\u0027-date?\n8\tmdma\tDoes use of Isinglass require special mention on the beer?\n8\tTom Medley\tWhat temperature should I serve my beer?\n7\tChris Cirefice\tDoes re-refrigerating affect the taste of beer?\n7\tAshwith Ullal\tDumping small amount of cigarette ashes into the beers\n7\tRyan Kinal\tPorter in the Marketplace\n7\tNullPoiиteя\tDoes beer really help to improve muscles?\n6\tcrownjewel82\tAre there any medicinal uses for beer?\n6\tAndrew Cheong\tWhat\u0027s responsible for the \"metallic\" taste in Belgian beers?\n"
      },
      "dateCreated": "Aug 23, 2016 7:27:38 AM",
      "dateStarted": "Aug 23, 2016 9:19:55 AM",
      "dateFinished": "Aug 23, 2016 9:19:58 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Top 5 Locations",
      "text": "%sql\nSELECT u.location as `Location`,count(p.id) as `Posts`\nFROM users u\nINNER JOIN posts p \nON u.id\u003dp.ownerUserId\nWHERE p.postTypeId\u003d1\nGROUP BY u.location\nORDER BY `Posts` DESC\nLIMIT 5",
      "dateUpdated": "Aug 23, 2016 9:19:50 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "pieChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Location",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "Posts",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Location",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorHide": true,
        "title": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1471930118036_831933454",
      "id": "20160823-072838_1560786153",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Location\tPosts\nnull\t191\nSingapore\t30\nUnited States\t16\nCambridge, United Kingdom\t13\nSan Diego, CA\t12\n"
      },
      "dateCreated": "Aug 23, 2016 7:28:38 AM",
      "dateStarted": "Aug 23, 2016 9:19:56 AM",
      "dateFinished": "Aug 23, 2016 9:20:06 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Top 10 User with highest reputation",
      "text": "%sql\nSELECT id,displayName,reputation FROM users ORDER BY reputation DESC LIMIT 10",
      "dateUpdated": "Aug 23, 2016 9:19:50 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 282.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "displayName",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "reputation",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "displayName",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1471929924627_-171231166",
      "id": "20160823-072524_58374605",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "id\tdisplayName\treputation\n112\tmdma\t3785\n268\tSloloem\t2897\n80\tFishtoaster\t2751\n37\tXander\t2401\n73\tAndrew Cheong\t2213\n27\tobject88\t2058\n170\tJames Henstridge\t1551\n31\taudiFanatic\t1364\n8\tLessPop_MoreFizz\t1345\n117\tChris Travers\t1293\n"
      },
      "dateCreated": "Aug 23, 2016 7:25:24 AM",
      "dateStarted": "Aug 23, 2016 9:19:58 AM",
      "dateFinished": "Aug 23, 2016 9:20:07 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Aug 23, 2016 9:19:50 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1471935761340_1395896708",
      "id": "20160823-090241_1887446561",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Aug 23, 2016 9:02:41 AM",
      "dateStarted": "Aug 23, 2016 9:20:07 AM",
      "dateFinished": "Aug 23, 2016 9:20:07 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "stackexchange-analytics/datagrid",
  "id": "2BVBDR13P",
  "angularObjects": {
    "2BV4JUE6V:shared_process": [],
    "2BVB6BYG9:shared_process": [],
    "2BSZP8VCR:shared_process": [],
    "2BWKABS1H:shared_process": [],
    "2BUG7VZ5Z:shared_process": [],
    "2BWAFY986:shared_process": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}
